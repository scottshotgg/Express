// This file is a testing scratchpad for generic testing scenarios

// FIXME: cannot declare functions without args or returns
func someFunction(int arg1) (object returnValue) {
  for k of [ 2, 4, 5, 9 ] {
    onleave Println("value of k: ", k)
    defer Println("value of k: ", k)
    if arg1 < k {
      return { value: k }
    }
  }

  return { something: 0 }
}

Println("return value", someFunction(7))
Println()
Println()
onexit Println("return value", someFunction(9))

struct Engine = {
  float Displacement = 2.4
  string Type = "v6"
  int HP = 235
  string OilType = "5w-20"
  var Warnings
}

var things = {
  thingy := 0
}

var normalWarnings = {
  bool lowOil
  bool lowGas
  bool highTemp
  bool lowTirePressure
}

struct Car = {
  var id
  string Type = "car"
  bool New
  int numOfWheels = 4
  engine := Engine {
    HP: 199
    Warnings: normalWarnings
  }
}
defer Println("Most cars:", Car)

/*oldWarnings := {
  antique: true
}*/

something := someFunction(7)
Println(something)

string name = "hey this is an id"
oldCar := Car {
  id: "hey this is an id"
  Type: "car"
  New: false
  numOfWheels: 4
  engine: Engine{
    HP: 160
    //Warnings: oldWarnings
    //Warnings: someFunction(7)
    Warnings: something
  }
}

Println("Old cars:" oldCar)

// FIXME: this splatters out a shit ton of text, needs to
// actually print the variable. This will have to be done
// somehow by creating a local variable and then sending
// that into the function
/*
Println("Values for Car struct", Car{
  Type = "truck"
})
*/
