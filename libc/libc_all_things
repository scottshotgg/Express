
 -- Variable: volatile int errno
 -- Variable: char * program_invocation_name
 -- Variable: char * program_invocation_short_name
 -- Variable: void (*error_print_progname) (void)
 -- Variable: unsigned int error_message_count
 -- Variable: int error_one_per_line
 -- Variable: __malloc_hook
 -- Variable: __realloc_hook
 -- Variable: __free_hook
 -- Variable: __memalign_hook
   ---------- Footnotes ----------
 -- Variable: obstack_alloc_failed_handler
               while (room-- > 0)
     const char string[] = "words separated by spaces -- and, punctuation!";
     const char string[] = "words separated by spaces -- and, punctuation!";
   ---------- Footnotes ----------
 -- Variable: FILE * stdin
 -- Variable: FILE * stdout
 -- Variable: FILE * stderr
 -- Deprecated function: char * gets (char *S)
  
 -- Type: struct printf_info
 -- Obsolete function: int creat (const char *FILENAME, mode_t MODE)
 -- Obsolete function: int creat64 (const char *FILENAME, mode_t MODE)
   ---------- Footnotes ----------
 -- Deprecated Function: char * getwd (char *BUFFER)
        
        
 -- SVID Macro: char * P_tmpdir
 -- Constant: size_t IFNAMSIZ
 -- Constant: struct in6_addr in6addr_loopback
 -- Constant: struct in6_addr in6addr_any
 -- Constant: int SOL_SOCKET
  
 -- Variable: getdate_err
 -- Variable: char * tzname [2]
 -- Variable: long int timezone
 -- Variable: int daylight
  
 -- Constant: rlim_t RLIM_INFINITY
 -- Variable: int opterr
 -- Variable: int optopt
 -- Variable: int optind
 -- Variable: char * optarg
     % testopt -a -- -b
 -- Variable: const char * argp_program_version
 -- Variable: const char * argp_program_bug_address
 -- Variable: argp_program_version_hook
 -- Variable: error_t argp_err_exit_status
       "Argp example #2 -- a pretty minimal program using argp";
       "Argp example #3 -- a program with options and arguments using argp";
       "Argp example #4 -- a program with somewhat more complicated\
      to force a line-break, e.g.\n<-- here.";
 -- Variable: char ** environ
   ---------- Footnotes ----------
     -rw-r--r--  1 games           0 Jul 31 15:33 scores
  
  
 -- Probe: memory_sbrk_more (void *$ARG1, size_t $ARG2)
 -- Probe: memory_sbrk_less (void *$ARG1, size_t $ARG2)
 -- Probe: memory_heap_new (void *$ARG1, size_t $ARG2)
 -- Probe: memory_heap_free (void *$ARG1, size_t $ARG2)
 -- Probe: memory_heap_more (void *$ARG1, size_t $ARG2)
 -- Probe: memory_heap_less (void *$ARG1, size_t $ARG2)
 -- Probe: memory_malloc_retry (size_t $ARG1)
 -- Probe: memory_realloc_retry (size_t $ARG1, void *$ARG2)
 -- Probe: memory_memalign_retry (size_t $ARG1, size_t $ARG2)
 -- Probe: memory_calloc_retry (size_t $ARG1)
 -- Probe: memory_arena_retry (size_t $ARG1, void *$ARG2)
 -- Probe: memory_arena_new (void *$ARG1, size_t $ARG2)
 -- Probe: memory_arena_reuse (void *$ARG1, void *$ARG2)
 -- Probe: memory_arena_reuse_wait (void *$ARG1, void *$ARG2, void
 -- Probe: memory_arena_reuse_free_list (void *$ARG1)
 -- Probe: memory_mallopt (int $ARG1, int $ARG2)
 -- Probe: memory_mallopt_mxfast (int $ARG1, int $ARG2)
 -- Probe: memory_mallopt_trim_threshold (int $ARG1, int $ARG2, int
 -- Probe: memory_mallopt_top_pad (int $ARG1, int $ARG2, int $ARG3)
 -- Probe: memory_mallopt_mmap_threshold (int $ARG1, int $ARG2, int
 -- Probe: memory_mallopt_mmap_max (int $ARG1, int $ARG2, int $ARG3)
 -- Probe: memory_mallopt_perturb (int $ARG1, int $ARG2)
 -- Probe: memory_mallopt_arena_test (int $ARG1, int $ARG2)
 -- Probe: memory_mallopt_arena_max (int $ARG1, int $ARG2)
 -- Probe: memory_mallopt_free_dyn_thresholds (int $ARG1, int $ARG2)
 -- Probe: memory_tunable_tcache_max_bytes (int $ARG1, int $ARG2)
 -- Probe: memory_tunable_tcache_count (int $ARG1, int $ARG2)
 -- Probe: memory_tunable_tcache_unsorted_limit (int $ARG1, int $ARG2)
 -- Probe: slowatan2 (int $ARG1, double $ARG2, double $ARG3, double
 -- Probe: slowatan2_inexact (int $ARG1, double $ARG2, double $ARG3,
 -- Probe: slowatan (int $ARG1, double $ARG2, double $ARG3)
 -- Probe: slowatan_inexact (int $ARG1, double $ARG2, double $ARG3)
 -- Probe: slowtan (double $ARG1, double $ARG2)
 -- Probe: slowasin (double $ARG1, double $ARG2)
 -- Probe: slowacos (double $ARG1, double $ARG2)
 -- Probe: slowsin (double $ARG1, double $ARG2)
 -- Probe: slowcos (double $ARG1, double $ARG2)
 -- Probe: slowsin_dx (double $ARG1, double $ARG2, double $ARG3)
 -- Probe: slowcos_dx (double $ARG1, double $ARG2, double $ARG3)
 -- Probe: setjmp (void *$ARG1, int $ARG2, void *$ARG3)
 -- Probe: longjmp (void *$ARG1, int $ARG2, void *$ARG3)
 -- Probe: longjmp_target (void *$ARG1, int $ARG2, void *$ARG3)
 -- Tunable namespace: glibc.malloc
 -- Tunable: glibc.malloc.check
 -- Tunable: glibc.malloc.top_pad
 -- Tunable: glibc.malloc.perturb
 -- Tunable: glibc.malloc.mmap_threshold
 -- Tunable: glibc.malloc.trim_threshold
 -- Tunable: glibc.malloc.mmap_max
 -- Tunable: glibc.malloc.arena_test
 -- Tunable: glibc.malloc.arena_max
 -- Tunable: glibc.malloc.tcache_max
 -- Tunable: glibc.malloc.tcache_count
 -- Tunable: glibc.malloc.tcache_unsorted_limit
 -- Tunable namespace: glibc.elision
 -- Tunable: glibc.elision.enable
 -- Tunable: glibc.elision.skip_lock_busy
 -- Tunable: glibc.elision.skip_lock_internal_abort
 -- Tunable: glibc.elision.skip_lock_after_retries
 -- Tunable: glibc.elision.tries
 -- Tunable: glibc.elision.skip_trylock_internal_abort
 -- Tunable namespace: glibc.tune
 -- Tunable: glibc.tune.hwcap_mask
 -- Tunable: glibc.tune.hwcaps
 -- Tunable: glibc.tune.cached_memopt
 -- Tunable: glibc.tune.cpu
 -- Tunable: glibc.tune.x86_data_cache_size
 -- Tunable: glibc.tune.x86_shared_cache_size
 -- Tunable: glibc.tune.x86_non_temporal_threshold
 -- Tunable: glibc.tune.x86_ibt
 -- Tunable: glibc.tune.x86_shstk